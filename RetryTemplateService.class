package com.bt.tmf.bereavement.newprofile.client;

import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.retry.annotation.Backoff;
import org.springframework.retry.annotation.EnableRetry;
import org.springframework.retry.annotation.Retryable;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import java.net.URI;

@EnableRetry
@Component
@RequiredArgsConstructor
public class RestClientRetryService {

private final RestTemplate restTemplate;

@Value("${retry.maxAttempts}")
private int maxAttempts;

@Value("${retry.backoff.delay}")
private long backoffDelay;

@Retryable(maxAttemptsExpression = "${retry.maxAttempts}",
backoff = @Backoff(delayExpression = "${retry.backoff.delay}"))
public <T> ResponseEntity<String> getResponseEntity(URI uri, HttpMethod httpMethod, HttpEntity<T> entity) {
return restTemplate.exchange(uri, httpMethod, entity, String.class);
}
}